<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Sinks.RavenDB</name>
    </assembly>
    <members>
        <member name="T:Serilog.LoggerConfigurationRavenDBExtensions">
            <summary>
            Adds the WriteTo.RavenDB() extension method to <see cref="T:Serilog.LoggerConfiguration"/>.
            </summary>
        </member>
        <member name="M:Serilog.LoggerConfigurationRavenDBExtensions.RavenDB(Serilog.Configuration.LoggerSinkConfiguration,Raven.Client.IDocumentStore,Serilog.Events.LogEventLevel,System.Int32,System.Nullable{System.TimeSpan},System.IFormatProvider,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Adds a sink that writes log events as documents to a RavenDB database.
            </summary>
            <param name="loggerConfiguration">The logger configuration.</param>
            <param name="documentStore">A documentstore for a RavenDB database.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required in order to write an event to the sink.</param>
            <param name="batchPostingLimit">The maximum number of events to post in a single batch.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="defaultDatabase">Optional default database</param>
            <param name="expiration">Optional time before a logged message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but errorExpiration is, errorExpiration will be used for non-errors too.</param>
            <param name="errorExpiration">Optional time before a logged error message will be expired assuming the expiration bundle is installed.  <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but expiration is, expiration will be used for errors too.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="M:Serilog.LoggerConfigurationRavenDBExtensions.RavenDB(Serilog.Configuration.LoggerSinkConfiguration,System.String,Serilog.Events.LogEventLevel,System.Int32,System.Nullable{System.TimeSpan},System.IFormatProvider,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Adds a sink that writes log events as documents to a RavenDB database. Creates a document store using the specified connection string name.
            </summary>
            <param name="loggerConfiguration">The logger configuration.</param>
            <param name="connectionStringName">Connection string name to the RavenDB database.</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required in order to write an event to the sink.</param>
            <param name="batchPostingLimit">The maximum number of events to post in a single batch.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="defaultDatabase">Optional default database</param>
            <param name="expiration">Optional time before a logged message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but errorExpiration is, errorExpiration will be used for non-errors too.</param>
            <param name="errorExpiration">Optional time before a logged error message will be expired assuming the expiration bundle is installed.  <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but expiration is, expiration will be used for errors too.</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
            <exception cref="T:System.ArgumentNullException">A required parameter is null.</exception>
        </member>
        <member name="T:Serilog.Sinks.RavenDB.Data.LogEvent">
            <summary>
            A wrapper class for <see cref="T:Serilog.Events.LogEvent"/> that is used to store as a document in RavenDB
            </summary>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.Data.LogEvent.#ctor">
            <summary>
            Construct a new <see cref="T:Serilog.Sinks.RavenDB.Data.LogEvent"/>.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.Data.LogEvent.#ctor(Serilog.Events.LogEvent,System.String)">
            <summary>
            Construct a new <see cref="T:Serilog.Sinks.RavenDB.Data.LogEvent"/>.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.Timestamp">
            <summary>
            The time at which the event occurred.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.MessageTemplate">
            <summary>
            The template that was used for the log message.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.Level">
            <summary>
            The level of the log.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.Exception">
            <summary>
            A string representation of the exception that was attached to the log (if any).
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.RenderedMessage">
            <summary>
            The rendered log message.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.RavenDB.Data.LogEvent.Properties">
            <summary>
            Properties associated with the event, including those presented in <see cref="P:Serilog.Events.LogEvent.MessageTemplate"/>.
            </summary>
        </member>
        <member name="T:Serilog.Sinks.RavenDB.RavenDBSink">
            <summary>
            Writes log events as documents to a RavenDB database.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.RavenDB.RavenDBSink.DefaultBatchPostingLimit">
            <summary>
            A reasonable default for the number of events posted in
            each batch.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.RavenDB.RavenDBSink.RavenExpirationDate">
            <summary>
            Constant for the name of the meta data field used for RavenDB expiration bundle
            </summary>
        </member>
        <member name="F:Serilog.Sinks.RavenDB.RavenDBSink.DefaultPeriod">
            <summary>
            A reasonable default time to wait between checking for event batches.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.RavenDBSink.#ctor(Raven.Client.IDocumentStore,System.Int32,System.TimeSpan,System.IFormatProvider,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Construct a sink posting to the specified database.
            </summary>
            <param name="documentStore">A documentstore for a RavenDB database.</param>
            <param name="batchPostingLimit">The maximum number of events to post in a single batch.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="defaultDatabase">Optional name of default database</param>
            <param name="expiration">Optional time before a logged message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but errorExpiration is, errorExpiration will be used for non-errors too.</param>
            <param name="errorExpiration">Optional time before a logged error message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but expiration is, expiration will be used for errors too.</param>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.RavenDBSink.#ctor(System.String,System.Int32,System.TimeSpan,System.IFormatProvider,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Func{System.String,Raven.Client.IDocumentStore})">
            <summary>
            Construct a sink posting to the specified database. Creates a document store using the specified connection string name.
            </summary>
            <param name="connectionStringName">Connection string name to the RavenDB database</param>
            <param name="batchPostingLimit">The maximum number of events to post in a single batch.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="defaultDatabase">Optional name of default database</param>
            <param name="expiration">Optional time before a logged message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but errorExpiration is, errorExpiration will be used for non-errors too.</param>
            <param name="errorExpiration">Optional time before a logged error message will be expired assuming the expiration bundle is installed. <see cref="F:System.Threading.Timeout.InfiniteTimeSpan">Timeout.InfiniteTimeSpan</see> (-00:00:00.0010000) means no expiration. If this is not provided but expiration is, expiration will be used for errors too.</param>
            <param name="documentStoreFactory"></param>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.RavenDBSink.EmitBatchAsync(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})">
            <summary>
            Emit a batch of log events, running asynchronously.
            </summary>
            <param name="events">The events to emit.</param>
            <remarks>Override either <see cref="M:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink.EmitBatch(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})"/> or <see cref="M:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink.EmitBatchAsync(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})"/>,
            not both.</remarks>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.RavenDBSink.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Serilog.Sinks.RavenDB.RavenPropertyFormatter">
            <summary>
            Converts <see cref="T:Serilog.Events.LogEventProperty"/> values into simple scalars,
            dictionaries and lists so that they can be persisted in RavenDB.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.RavenDB.RavenPropertyFormatter.Simplify(Serilog.Events.LogEventPropertyValue)">
            <summary>
            Simplify the object so as to make handling the serialized
            representation easier.
            </summary>
            <param name="value">The value to simplify (possibly null).</param>
            <returns>A simplified representation.</returns>
        </member>
    </members>
</doc>
